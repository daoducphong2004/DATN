@extends('admin.layouts.default')

@section('title')
    @parent
    Trang qu·∫£n tr·ªã th·ªëng k√™ - C·ªïng Light Novel - ƒê·ªçc Light Novel
@endsection
@section('content')
    <div class="container">
        <h2 class="mb-4">Trang T·ªïng Quan</h2>

        <div class="row">
            <!-- T·ªïng s·ªë truy·ªán -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng S·ªë Truy·ªán</h5>
                        <p class="card-text">{{ $totalStories }}</p>
                    </div>
                </div>
            </div>

            <!-- T·ªïng s·ªë t·∫≠p -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng S·ªë T·∫≠p</h5>
                        <p class="card-text">{{ $totalEpisodes }}</p>
                    </div>
                </div>
            </div>

            <!-- T·ªïng s·ªë ng∆∞·ªùi d√πng -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng S·ªë Ng∆∞·ªùi D√πng</h5>
                        <p class="card-text">{{ $totalUsers }}</p>
                    </div>
                </div>
            </div>

            <!-- T·ªïng doanh thu -->
            <div class="col-md-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng T√°c Gi·∫£</h5>
                        <p class="card-text">{{ $countAuthor }}</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng Doanh Thu T√°c Gi·∫£</h5>
                        <p class="card-text">{{ $totalRevenueAuthor }} ü™ô</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">T·ªïng Doanh Thu Admin</h5>
                        <p class="card-text">{{ $totalRevenueAdmin }} ü™ô</p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1"></div>
            <div class="col-md-10">
                <div class="card">
                    <div class="card-body">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-md-1"></div>

        </div>
        <div class="row mt-4">
            <!-- Bi·ªÉu ƒë·ªì th·ªÉ lo·∫°i y√™u th√≠ch -->
            <div class="col-md-6">
                <h4>Th·ªÉ Lo·∫°i Y√™u Th√≠ch</h4>
                <canvas id="topLikeGenreChart"></canvas>
            </div>

            <!-- Bi·ªÉu ƒë·ªì th·ªÉ lo·∫°i xem nhi·ªÅu -->
            <div class="col-md-6">
                <h4>Th·ªÉ Lo·∫°i Xem Nhi·ªÅu</h4>
                <canvas id="topViewGenreChart"></canvas>
            </div>
        </div>

        <div class="row mt-4">
            <!-- Bi·ªÉu ƒë·ªì tr·∫°ng th√°i ng∆∞·ªùi d√πng n·∫°p ti·ªÅn -->
            <div class="col-md-4">
                <h4>Tr·∫°ng Th√°i Ng∆∞·ªùi D√πng N·∫°p Ti·ªÅn</h4>
                <canvas id="paymentStatusChart"></canvas>
            </div>

            <!-- Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng truy·ªán ƒë√£ mua -->
            <div class="col-md-8">
                <h4>S·ªë L∆∞·ª£ng Ch∆∞∆°ng ƒê∆∞·ª£c Mua (7 Ng√†y G·∫ßn Nh·∫•t)</h4>
                <canvas id="purchasedStoriesLast7DaysChart"></canvas>
            </div>
        </div>
    </div>
    <div class="row mt-5">
        <div class="col-md-5">
            <h4>S·ªë L∆∞·ª£ng Ch∆∞∆°ng ƒê∆∞·ª£c Mua Theo Th·ªÉ Lo·∫°i</h4>
            <canvas id="purchasedStoriesByGenreChart"></canvas>
        </div>
        <div class="col-md-7">
            <h4>B·∫£ng X·∫øp H·∫°ng T√°c Gi·∫£</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>T√™n</th>
                        <th>Coin ki·∫øm ƒë∆∞·ª£c</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($topAuthor as $author)
                        <tr>
                            <td>{{ $author->username }}</td>
                            <td>{{ $author->total_revenue }}</td>
                        </tr>
                    @endforeach
                </tbody>
            </table>
        </div>
    </div>
    <div class="row mt-4">
        <div class="col-md-8">
            <h4>B·∫£ng X·∫øp H·∫°ng Truy·ªán ƒê∆∞·ª£c Mua Nhi·ªÅu Nh·∫•t (7 Ng√†y G·∫ßn Nh·∫•t)</h4>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Truy·ªán</th>
                        <th>S·ªë L∆∞·ª£ng Mua</th>
                        <th>T·ªïng Coin</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach ($topPurchasedBooks as $book)
                        <tr>
                            <td>{{ $book->title }}</td>
                            <td>{{ $book->count }}</td>
                            <td>{{ $book->totalCoin }}</td>
                        </tr>
                    @endforeach
                </tbody>
            </table>
        </div>
        
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Bi·ªÉu ƒë·ªì th·ªÉ lo·∫°i y√™u th√≠ch
        const topLikeGenreChart = new Chart(document.getElementById('topLikeGenreChart'), {
            type: 'bar',
            data: {
                labels: @json($toplikeGenre->pluck('name')),
                datasets: [{
                    label: 'S·ªë L∆∞·ª£t Th√≠ch',
                    data: @json($toplikeGenre->pluck('total_likes')),
                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Bi·ªÉu ƒë·ªì th·ªÉ lo·∫°i xem nhi·ªÅu
        const topViewGenreChart = new Chart(document.getElementById('topViewGenreChart'), {
            type: 'bar',
            data: {
                labels: @json($topViewGenre->pluck('name')),
                datasets: [{
                    label: 'S·ªë L∆∞·ª£t Xem',
                    data: @json($topViewGenre->pluck('total_views')),
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });

        // Bi·ªÉu ƒë·ªì tr·∫°ng th√°i ng∆∞·ªùi d√πng n·∫°p ti·ªÅn
        const paymentStatusChart = new Chart(document.getElementById('paymentStatusChart'), {
            type: 'pie',
            data: {
                labels: ['ƒê√£ N·∫°p Ti·ªÅn', 'Ch∆∞a N·∫°p Ti·ªÅn'],
                datasets: [{
                    label: 'Ng∆∞·ªùi D√πng',
                    data: [{{ $paymentUserStatusCounts['paid'] }},
                        {{ $paymentUserStatusCounts['unpaid'] }}
                    ],
                    backgroundColor: ['rgba(75, 192, 192, 0.5)', 'rgba(255, 99, 132, 0.5)'],
                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],
                    borderWidth: 1
                }]
            }
        });

        // Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng truy·ªán ƒë√£ mua trong 7 ng√†y g·∫ßn nh·∫•t
        const purchasedStoriesLast7DaysChart = new Chart(document.getElementById('purchasedStoriesLast7DaysChart'), {
            type: 'line',
            data: {
                labels: @json($purchasedStoriesLast7Days->pluck('date')), // Ng√†y
                datasets: [{
                    label: 'S·ªë L∆∞·ª£ng Ch∆∞∆°ng ƒê∆∞·ª£c Mua',
                    data: @json($purchasedStoriesLast7Days->pluck('count')), // S·ªë l∆∞·ª£ng mua
                    borderColor: 'rgba(153, 102, 255, 1)',
                    backgroundColor: 'rgba(153, 102, 255, 0.5)',
                    fill: false,
                    borderWidth: 1
                }]
            }
        });
        // Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng ng∆∞·ªùi d√πng ƒëƒÉng k√Ω trong 7 ng√†y g·∫ßn nh·∫•t
        const newUsersLast7DaysChart = new Chart(document.getElementById('newUsersLast7DaysChart'), {
            type: 'line',
            data: {
                labels: @json($newUsersLast7Days->pluck('date')), // Ng√†y
                datasets: [{
                    label: 'S·ªë L∆∞·ª£ng Ng∆∞·ªùi D√πng ƒêƒÉng K√Ω',
                    data: @json($newUsersLast7Days->pluck('count')), // S·ªë l∆∞·ª£ng ƒëƒÉng k√Ω
                    borderColor: 'rgba(75, 192, 192, 1)',
                    backgroundColor: 'rgba(75, 192, 192, 0.5)',
                    fill: false,
                    borderWidth: 1
                }]
            }
        });
        const genres = @json($purchasedStoriesByGenre->pluck('genre')).slice(0, 10); // L·∫•y t·ªëi ƒëa 10 th·ªÉ lo·∫°i
        const counts = @json($purchasedStoriesByGenre->pluck('count')).slice(0, 10); // L·∫•y s·ªë l∆∞·ª£ng t∆∞∆°ng ·ª©ng

        // T√≠nh t·ªïng s·ªë l∆∞·ª£ng
        const totalCounts = counts.reduce((sum, count) => sum + count, 0);

        // Chuy·ªÉn ƒë·ªïi s·ªë l∆∞·ª£ng sang ph·∫ßn trƒÉm
        const percentages = counts.map(count => ((count / totalCounts) * 100).toFixed(
            2)); // L√†m tr√≤n ƒë·∫øn 2 ch·ªØ s·ªë th·∫≠p ph√¢n

        // T·∫°o m·∫£ng m√†u s·∫Øc t·ªëi ƒëa cho 10 th·ªÉ lo·∫°i
        const backgroundColors = [
            'rgba(255, 99, 132, 0.5)', // ƒê·ªè
            'rgba(54, 162, 235, 0.5)', // Xanh
            'rgba(255, 206, 86, 0.5)', // V√†ng
            'rgba(75, 192, 192, 0.5)', // Xanh ng·ªçc
            'rgba(153, 102, 255, 0.5)', // T√≠m
            'rgba(255, 159, 64, 0.5)', // Cam
            'rgba(201, 203, 207, 0.5)', // X√°m
            'rgba(0, 255, 0, 0.5)', // Xanh l√°
            'rgba(128, 0, 128, 0.5)', // T√≠m ƒë·∫≠m
            'rgba(255, 0, 255, 0.5)' // H·ªìng
        ];

        // T·∫°o m·∫£ng vi·ªÅn m√†u t∆∞∆°ng ·ª©ng
        const borderColors = backgroundColors.map(color => color.replace('0.5', '1'));

        const purchasedStoriesByGenreChart = new Chart(document.getElementById('purchasedStoriesByGenreChart'), {
            type: 'pie',
            data: {
                datasets: [{
                    label: 'T·ª∑ l·ªá % Ch∆∞∆°ng ƒê∆∞·ª£c Mua',
                    data: percentages, // S·ª≠ d·ª•ng t·ª∑ l·ªá ph·∫ßn trƒÉm l√†m d·ªØ li·ªáu
                    backgroundColor: backgroundColors.slice(0, genres.length), // √Åp d·ª•ng m√†u n·ªÅn t∆∞∆°ng ·ª©ng
                    borderColor: borderColors.slice(0, genres.length), // √Åp d·ª•ng vi·ªÅn m√†u t∆∞∆°ng ·ª©ng
                    borderWidth: 1
                }],
                labels: genres.map((genre, index) => `${genre} (${percentages[index]}%)`) // Th·ªÉ lo·∫°i v√† ph·∫ßn trƒÉm

            }
        });
        // Data t·ª´ server (t·∫°o danh s√°ch ng√†y v√† doanh thu t∆∞∆°ng ·ª©ng)
        const labels = @json($revenueAuthor->pluck('date')); // Ng√†y giao d·ªãch
        const authorRevenue = @json($revenueAuthor->pluck('total_revenue')); // Doanh thu c·ªßa t√°c gi·∫£
        const adminRevenue = @json($revenueAdmin->pluck('total_revenue')); // Doanh thu c·ªßa admin

        // Kh·ªüi t·∫°o bi·ªÉu ƒë·ªì
        const ctx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(ctx, {
            type: 'line', // Bi·ªÉu ƒë·ªì c·ªôt
            data: {
                labels: labels,
                datasets: [{
                        label: 'Doanh Thu T√°c Gi·∫£',
                        data: authorRevenue,
                        backgroundColor: 'rgba(75, 192, 192, 0.5)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Doanh Thu Admin',
                        data: adminRevenue,
                        backgroundColor: 'rgba(255, 99, 132, 0.5)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom' // Hi·ªÉn th·ªã ch√∫ th√≠ch d∆∞·ªõi bi·ªÉu ƒë·ªì
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const value = context.raw || 0;
                                return `${context.dataset.label}: ${value.toLocaleString()} ü™ô`;
                            }
                        }
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Ng√†y'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Doanh Thu (ü™ô)'
                        },
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
@endsection
